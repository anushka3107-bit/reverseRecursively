/*
struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
class Solution {
public:
   ListNode* reverseList(ListNode* head) {
// recursive
       if(head == nullptr || head->next == nullptr)
           return head;
       
       ListNode *newHead = reverseList(head->next);
       ListNode *temp = newHead;
       while(temp->next != NULL){
           temp = temp->next;
       }
       
       temp->next =head;
       head->next =nullptr;
       return newHead;
        
        
    }
};
